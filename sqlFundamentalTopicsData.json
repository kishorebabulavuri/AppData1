[
  {
    "id": 1,
    "title": "Introduction to Database Concepts",
    "image": "https://assets.toptal.io/images?url=https%3A%2F%2Fbs-uploads.toptal.io%2Fblackfish-uploads%2Fcomponents%2Fblog_post_page%2F4084683%2Fcover_image%2Fregular_1708x683%2F0712-Bad_Practices_in_Database_Design_-_Are_You_Making_These_Mistakes_Dan_Newsletter-549c07a55cc276f4204263b6e6bef737.png",
    "content": "What is DATA?\nData refers to raw facts and figures that have no context or meaning by themselves. It could be numbers, text, images, audio, etc...",
    "syntax": "Basic SQL Command Structure:\nCOMMAND [options] FROM table_name WHERE [condition];",
    "sqlQuery": "SELECT * FROM Student;",
    "queryResult": "Displays all rows and columns from the Student table.",
    "queryExplanation": "This SQL query retrieves all records from the Student table, showing complete information stored in each row."
  },
  {
    "id": 2,
    "title": "SQL Data Types",
    "image": "https://i.postimg.cc/3Nb7RY7m/hierarchy.png",
    "content": "SQL Data Types define the type of data that can be stored in a column. Each column in a table must have a name and a data type...",
    "syntax": "CREATE TABLE table_name (\n    column1 datatype [constraints],\n    column2 datatype [constraints],\n    ...\n);",
    "sqlQuery": "CREATE TABLE Student (\n  ID INT,\n  Name VARCHAR(50),\n  BirthDate DATE,\n  Marks DECIMAL(5,2),\n  IsPassed BOOLEAN\n);",
    "queryResult": "Table 'Student' created with columns for ID, Name, BirthDate, Marks, and IsPassed.",
    "queryExplanation": "This query creates a table named 'Student' with various common data types."
  },
  {
    "id": 3,
    "title": "MySQL Data Types",
    "image": "https://i.imgur.com/v1S6SjC.png",
    "content": "MySQL supports various data types categorized as Numeric, String, Date & Time, and others...",
    "syntax": "CREATE TABLE table_name (\n    column1 mysql_datatype,\n    ...\n);",
    "sqlQuery": "CREATE TABLE Orders (\n  OrderID INT,\n  OrderDate DATETIME,\n  Status ENUM('Pending', 'Shipped', 'Delivered'),\n  Receipt BLOB\n);",
    "queryResult": "Creates an Orders table with MySQL-specific data types including ENUM and BLOB.",
    "queryExplanation": "The ENUM data type restricts values to specific options, and BLOB is used to store binary data like files in MySQL."
  },
  {
    "id": 4,
    "title": "PostgreSQL Data Types",
    "image": "https://i.imgur.com/GscX8p3.png",
    "content": "PostgreSQL is known for its rich set of data types and custom types support...",
    "syntax": "CREATE TABLE table_name (\n    column1 postgres_datatype,\n    ...\n);",
    "sqlQuery": "CREATE TABLE Employee (\n  ID SERIAL PRIMARY KEY,\n  Name VARCHAR(100),\n  Skills TEXT[],\n  Profile JSONB,\n  IsActive BOOLEAN\n);",
    "queryResult": "Creates Employee table using PostgreSQL-specific types like ARRAY and JSONB.",
    "queryExplanation": "TEXT[] stores a list of skills, and JSONB allows efficient querying and indexing of structured JSON data."
  },
  {
    "id": 5,
    "title": "Oracle SQL Data Types",
    "image": "https://i.imgur.com/b2r98C4.png",
    "content": "Oracle Database uses a specific set of data types suited for enterprise-level systems...",
    "syntax": "CREATE TABLE table_name (\n    column1 oracle_datatype,\n    ...\n);",
    "sqlQuery": "CREATE TABLE Product (\n  ProductID NUMBER PRIMARY KEY,\n  Name VARCHAR2(100),\n  Description CLOB,\n  CreatedAt TIMESTAMP,\n  IsAvailable CHAR(1) CHECK (IsAvailable IN ('Y','N'))\n);",
    "queryResult": "Creates Product table with Oracle-specific types like CLOB and CHAR(1) used for BOOLEAN logic.",
    "queryExplanation": "CLOB stores large descriptions, and CHAR(1) with a CHECK constraint is used in Oracle to simulate BOOLEAN values (Y/N)."
  },
  {
    "id": 6,
    "title": "Filtering Data with WHERE",
    "image": "https://i.imgur.com/jH6a2o1.png",
    "content": "The `WHERE` clause is essential for filtering records to retrieve only the rows that meet a specific condition...",
    "syntax": "SELECT column1, column2, ...\nFROM table_name\nWHERE condition;",
    "sqlQuery": "SELECT * FROM Artists WHERE Genre = 'Rock';",
    "queryResult": "ArtistID | Name           | Genre\n---------|----------------|------\n1        | Led Zeppelin   | Rock",
    "queryExplanation": "This query selects all columns (`*`) from the 'Artists' table, but only for the rows where the 'Genre' column is 'Rock'."
  },
  {
    "id": 7,
    "title": "Sorting Results with ORDER BY",
    "image": "https://i.imgur.com/9s0lK3v.png",
    "content": "The `ORDER BY` clause sorts the result set. The default order is ascending (`ASC`). To sort in the reverse order, use the `DESC` keyword.",
    "syntax": "SELECT column1, column2, ...\nFROM table_name\nORDER BY column_name [ASC|DESC];",
    "sqlQuery": "SELECT Name, Genre FROM Artists ORDER BY Name DESC;",
    "queryResult": "Name              | Genre\n------------------|--------\nMichael Jackson   | Pop\nMiles Davis       | Jazz\nLed Zeppelin      | Rock",
    "queryExplanation": "This query retrieves the 'Name' and 'Genre' for all artists and sorts the results by the 'Name' column in descending order."
  },
  {
    "id": 8,
    "title": "Working with NULL Values",
    "image": "https://i.imgur.com/d5b9Y7W.png",
    "content": "A `NULL` value in a database field means 'no value'. It is different from zero or an empty string...",
    "syntax": "SELECT column_name(s)\nFROM table_name\nWHERE column_name IS [NOT] NULL;",
    "sqlQuery": "SELECT Name FROM Artists WHERE Genre IS NULL;",
    "queryResult": "Name\n--------\nBeethoven",
    "queryExplanation": "This query finds the names of any artists in the table for whom the 'Genre' field has been left empty (NULL)."
  },
  {
    "id": 9,
    "title": "Using Aggregate Functions",
    "image": "https://i.imgur.com/r3jK4gA.png",
    "content": "Aggregate functions perform a calculation on a set of rows and return a single, summary value...",
    "syntax": "SELECT AGGREGATE_FUNCTION(column_name)\nFROM table_name\nWHERE condition;",
    "sqlQuery": "SELECT COUNT(*) FROM Artists;",
    "queryResult": "COUNT(*)\n----------\n4",
    "queryExplanation": "This query uses the `COUNT(*)` function to count the total number of rows in the 'Artists' table..."
  }
]
