[
  {
    "id": "1",
    "title": "What is the difference between WHERE and HAVING clauses?",
    "tags": ["Beginner", "Basic SQL"],
    "buttons": ["WHERE", "HAVING", "GROUP BY"],
    "askedAt": ["Google", "Microsoft", "Amazon"],
    "likes": 324,
    "comments": 45,
    "answer": "The WHERE clause is used to filter records before any groupings are made, while the HAVING clause is used to filter values after they have been grouped. WHERE is applied to individual rows, whereas HAVING is applied to groups."
  },
  {
    "id": "2",
    "title": "Explain the concept of database normalization",
    "tags": ["Intermediate", "Database Design"],
    "buttons": ["Normalization", "1NF", "2NF", "3NF"],
    "askedAt": ["Facebook", "Apple", "Netflix"],
    "likes": 287,
    "comments": 32,
    "answer": "Database normalization is the process of structuring a relational database in accordance with a series of so-called normal forms to reduce data redundancy and improve data integrity."
  },
  {
    "id": "3",
    "title": "How do you optimize SQL queries?",
    "tags": ["Advanced", "Performance"],
    "buttons": ["Indexing", "Query Plan", "EXPLAIN"],
    "askedAt": ["Tesla", "Adobe", "Salesforce"],
    "likes": 412,
    "comments": 58,
    "answer": "SQL query optimization involves several techniques: using appropriate indexes, avoiding SELECT *, using JOIN instead of subqueries, limiting the result set with LIMIT, and analyzing query execution plans."
  },
  {
    "id": "4",
    "title": "What is the difference between INNER JOIN and LEFT JOIN?",
    "tags": ["Beginner", "Joins"],
    "buttons": ["INNER JOIN", "LEFT JOIN", "JOIN Types"],
    "askedAt": ["Amazon", "Walmart", "Oracle"],
    "likes": 375,
    "comments": 40,
    "answer": "INNER JOIN returns only the rows with matching values in both tables, whereas LEFT JOIN returns all rows from the left table and matched rows from the right table. If no match is found, NULLs are returned for right table columns."
  },
  {
    "id": "5",
    "title": "What are indexes in SQL and how do they work?",
    "tags": ["Intermediate", "Performance"],
    "buttons": ["Index", "B-Tree", "Performance"],
    "askedAt": ["Google", "Uber", "Flipkart"],
    "likes": 296,
    "comments": 29,
    "answer": "Indexes are data structures that improve the speed of data retrieval operations on a database table. They work like a book’s index, allowing faster lookup of rows. Common types include B-tree and hash indexes."
  },
  {
    "id": "6",
    "title": "What is a correlated subquery?",
    "tags": ["Advanced", "Subqueries"],
    "buttons": ["Subquery", "Correlated", "Nested Queries"],
    "askedAt": ["Microsoft", "LinkedIn", "Zomato"],
    "likes": 348,
    "comments": 37,
    "answer": "A correlated subquery is a subquery that uses values from the outer query. It runs once for each row selected by the outer query, making it less efficient but useful for complex filtering."
  },
  {
    "id": "7",
    "title": "Explain ACID properties in a database.",
    "tags": ["Intermediate", "Database Theory"],
    "buttons": ["ACID", "Transactions", "Atomicity"],
    "askedAt": ["Infosys", "Capgemini", "TCS"],
    "likes": 332,
    "comments": 41,
    "answer": "ACID stands for Atomicity, Consistency, Isolation, and Durability. These properties ensure reliable transaction processing by maintaining data integrity even in cases of failures or concurrent access."
  },
  {
    "id": "8",
    "title": "What is the difference between DELETE, TRUNCATE, and DROP?",
    "tags": ["Beginner", "Data Manipulation"],
    "buttons": ["DELETE", "TRUNCATE", "DROP"],
    "askedAt": ["HCL", "Wipro", "Google"],
    "likes": 409,
    "comments": 53,
    "answer": "DELETE removes specified rows and can be rolled back. TRUNCATE removes all rows without logging individual row deletions and cannot be rolled back. DROP removes the entire table structure and data."
  },
  {
    "id": "9",
    "title": "What is a primary key and how is it different from a unique key?",
    "tags": ["Beginner", "Constraints"],
    "buttons": ["Primary Key", "Unique Key", "Constraints"],
    "askedAt": ["Amazon", "Zoho", "TCS"],
    "likes": 301,
    "comments": 34,
    "answer": "A primary key uniquely identifies each record in a table and does not allow NULL values. A unique key also ensures uniqueness but can accept a single NULL value per column."
  },
  {
    "id": "10",
    "title": "What is a foreign key and why is it used?",
    "tags": ["Beginner", "Constraints"],
    "buttons": ["Foreign Key", "Referential Integrity", "Relationships"],
    "askedAt": ["Infosys", "Cognizant", "Capgemini"],
    "likes": 289,
    "comments": 28,
    "answer": "A foreign key is a field in one table that refers to the primary key in another table. It is used to maintain referential integrity between related tables."
  },
  {
    "id": "11",
    "title": "What is the difference between UNION and UNION ALL?",
    "tags": ["Intermediate", "Set Operations"],
    "buttons": ["UNION", "UNION ALL", "Set Operators"],
    "askedAt": ["Walmart", "Oracle", "Salesforce"],
    "likes": 323,
    "comments": 39,
    "answer": "UNION removes duplicate records between two SELECT statements, while UNION ALL includes all records, even duplicates. UNION is slower due to the de-duplication step."
  },
  {
    "id": "12",
    "title": "What is a view in SQL and how is it useful?",
    "tags": ["Intermediate", "Database Objects"],
    "buttons": ["View", "Virtual Table", "SELECT"],
    "askedAt": ["Google", "Adobe", "Accenture"],
    "likes": 278,
    "comments": 30,
    "answer": "A view is a virtual table created using a SELECT query. It allows you to simplify complex queries, improve security, and present data in a specific format without storing it physically."
  },
  {
    "id": "13",
    "title": "Explain the difference between clustered and non-clustered indexes.",
    "tags": ["Advanced", "Indexing"],
    "buttons": ["Clustered", "Non-clustered", "Indexing"],
    "askedAt": ["Facebook", "Oracle", "Flipkart"],
    "likes": 345,
    "comments": 42,
    "answer": "A clustered index determines the physical order of rows in a table and each table can have only one. A non-clustered index creates a separate structure for indexing and allows multiple indexes per table."
  },
  {
    "id": "14",
    "title": "What are SQL aggregate functions?",
    "tags": ["Beginner", "Functions"],
    "buttons": ["COUNT", "SUM", "AVG", "MIN", "MAX"],
    "askedAt": ["IBM", "SAP", "TCS"],
    "likes": 310,
    "comments": 25,
    "answer": "Aggregate functions perform calculations on multiple rows and return a single value. Common ones include COUNT, SUM, AVG, MIN, and MAX."
  },
  {
    "id": "15",
    "title": "What is the use of the DISTINCT keyword in SQL?",
    "tags": ["Beginner", "Query Optimization"],
    "buttons": ["DISTINCT", "SELECT", "Duplicates"],
    "askedAt": ["Google", "Paytm", "Freshworks"],
    "likes": 284,
    "comments": 24,
    "answer": "DISTINCT is used in a SELECT statement to return only unique values and remove duplicates from the result set."
  },
  {
    "id": "16",
    "title": "What is a self join in SQL?",
    "tags": ["Intermediate", "Joins"],
    "buttons": ["Self Join", "Alias", "Relationships"],
    "askedAt": ["LinkedIn", "Intel", "Zoho"],
    "likes": 318,
    "comments": 29,
    "answer": "A self join is a regular join but the table is joined with itself. It’s useful for comparing rows within the same table using table aliases."
  },
  {
    "id": "17",
    "title": "What are constraints in SQL and name a few common types?",
    "tags": ["Beginner", "Database Integrity"],
    "buttons": ["Constraints", "Primary Key", "Foreign Key", "Check"],
    "askedAt": ["HCL", "Cognizant", "Mindtree"],
    "likes": 297,
    "comments": 31,
    "answer": "Constraints enforce rules at the table level to ensure data integrity. Common types include PRIMARY KEY, FOREIGN KEY, UNIQUE, NOT NULL, and CHECK."
  },
  {
    "id": "18",
    "title": "What is the use of the CASE statement in SQL?",
    "tags": ["Intermediate", "Conditional Logic"],
    "buttons": ["CASE", "IF ELSE", "Conditions"],
    "askedAt": ["Amazon", "Swiggy", "PhonePe"],
    "likes": 325,
    "comments": 33,
    "answer": "The CASE statement adds conditional logic to SQL queries. It works like an IF-THEN-ELSE and is often used in SELECT, UPDATE, or ORDER BY clauses."
  }
]
